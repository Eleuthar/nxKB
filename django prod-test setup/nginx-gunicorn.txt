INDEX
``````
1. package install
2. config nginx web server
3. config gunicorn http server

    
~~~~~~~~~~~~~~~~~~~~~
1. prerequisite setup
~~~~~~~~~~~~~~~~~~~~~

$ useradd -m -s /bin/bash -G sudo <appUzr>
$ visudo
    > %sudo   ALL=(ALL:ALL) NOPASSWD:ALL
$ su <appUzr>
$ sudo apt-get install nginx
$ (venv) pip install gunicorn

    
~~~~~~~~~~~~~~~~~~~~~~~~~~~
2. config nginx web server
~~~~~~~~~~~~~~~~~~~~~~~~~~~

$ vim /etc/nginx/sites-available/domain.net
````````````````````````````````````````````
server {	
	listen 80;
	listen [::]:80;
	server_name test.geofleet.ro www.test.geofleet.ro;
	return 302 https://$server_name$request_uri;
}
server {
	server_name test.geofleet.ro;
	client_max_body_size 100M;
	listen 443 ssl;
    listen [::]:443 ssl;
	ssl_certificate /etc/nginx/certificate/nginx-certificate.crt;
	ssl_certificate_key /etc/nginx/certificate/nginx.key;
	ssl_session_timeout 1d;
	ssl_session_cache shared:SSL:50m;
	ssl_protocols TLSv1 TLSv1.1 TLSv1.2;
	ssl_ciphers  ECDHE+AES128:RSA+AES128:ECDHE+AES256:RSA+AES256:ECDHE+3DES:RSA+3DES:!MD5;
	ssl_prefer_server_ciphers   on;

	location /static/ {
		alias /var/www/geo/static/;
		add_header Cache-Control 'no-cache, no-store, must-revalidate';
		add_header Pragma 'no-cache';
		expires 0;
	}

	location /media/ {
		alias /var/www/geo/media/;
	}

	location / {
		proxy_pass http://127.0.0.1:8000;
		include	/etc/nginx/proxy_params;
	}
}

````````````````````````````````````````````

# enable site
cd /etc/nginx/sites-enabled
ln -s /etc/nginx/sites-available/domain.net


$ touch /etc/systemd/system/<app>.service
$ systemctl edit --full geofleet.service
`````````````````````````````````````````
[Unit]
Description=Geofleet

[Service]
Type=simple
User=geodev
Group=geodev
EnvironmentFile=/etc/geofleet/gunicorn.env
#EnvironmentFile=/var/www/geo/env_mail.sh \\ optional, loaded manually if needed
WorkingDirectory=/var/www/geo/
ExecStart=/var/www/geo/vnv/bin/gunicorn --bind 127.0.0.1:8000 --workers 2 <project>.wsgi:application
    OR
ExecStart=/var/www/geo/vnv/bin/gunicorn --config /etc/geofleet/gun <project>.wsgi:application
ExecReload=/bin/kill -s HUP $MAINPID
`````````````````````````````````````````

$ systemctl daemon-reload
$ nginx -t
$ systemctl status \ start <app>.service
$ ps auxwwf | less

    
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
3. config gunicorn http server
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    
$ vim /etc/<app>/gunicorn.conf.py 
    \\ not mandatory, can be replaced by systemd service file kwarg
``````````````````````````````````
workers = 3
syslog = True
bind = '127.0.0.1:8000'
accesslog = "/var/log/gunicorn/access.log"
errorlog = "/var/log/gunicorn/error.log"
capture_output = True
loglevel = "info"
``````````````````````````````````

$ vim /etc/<app>/gunicorn.env
``````````````````````````````
DJANGO_SETTINGS_MODULE=<project>.prod
SECRET_KEY=''
DB_NAME=''
DB_UZR=''
DB_PVD=''
EMAIL_HOST="smtp.gmail.com"
EMAIL_UZR=''
EMAIL_PVD=''
```````````````````````````````


~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Permission check for static 
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

$ sudo grep user /etc/nginx/nginx.conf
$ stat <all directories to static dir>
$ sudo chmod 751 <forbidden dir>


~~~~~~~~~~~~~~~~~~
  SSL CERTIFICATE
~~~~~~~~~~~~~~~~~~

# mkdir /etc/nginx/certificate
# cd /etc/nginx/certificate
# openssl req -new -newkey rsa:4096 -x509 -sha256 -days 365 -nodes -out nginx-certificate.crt -keyou
t nginx.key
# systemctl restart nginx

